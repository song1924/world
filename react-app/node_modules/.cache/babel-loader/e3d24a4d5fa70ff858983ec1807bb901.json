{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia Park\\\\source\\\\repos\\\\world\\\\react-app\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Continents } from './components/Continents';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Regions } from './components/Regions';\nimport { Countries } from './components/Countries';\nimport { CountryAttr } from './components/CountryAttr';\nimport { Language } from './components/Language';\nimport { Cities } from './components/Cities';\n\nfunction App() {\n  const [continent, setContinent] = useState([]);\n  const [regions, setRegions] = useState([]);\n  const [region, setRegion] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [languages, setLanguages] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [sep1, setSep1] = useState(\"\");\n  const [sep2, setSep2] = useState(\"\");\n\n  function onContinentClick(cont) {\n    setRegions([]);\n    setCountries([]);\n    setLanguages([]);\n    setCities([]);\n    setRegion([]);\n    setCountry([]);\n    setSep2(\"\");\n    setContinent(cont);\n    fetch('/regions/' + cont).then(res => res.json()).then(data => {\n      setRegions(data.regions);\n    });\n    setSep1(\">\");\n  }\n\n  function onRegionClick(reg) {\n    setCountries([]);\n    setLanguages([]);\n    setCities([]);\n    setRegion([]);\n    setCountry([]);\n    setRegion(reg);\n    const GET_COUNTRIES = `\nquery getCountries {\ncountries(filters: {continent: \"${continent}\", region: \"${reg}\"}) {\nedges {\nnode {\ncode \nname \ncontinent \nregion \nsurfacearea \nindepyear \npopulation \nlifeexpectancy \ngnp \ngnpold \nlocalname \ngovernmentform \nheadofstate \ncapital \ncode2\n}\n}\n}\n}\n`;\n    fetch('/graphql?query=' + GET_COUNTRIES).then(res => res.json()).then(data => {\n      setCountries(data.data.countries.edges);\n    });\n    setSep2(\">\");\n  }\n\n  function onCountryClick(country) {\n    setCountry(country);\n    const GET_LANGUAGES = `\nquery getLangauages { \ncountryLanguages(filters: {countrycode: \"${country.code}\"}) { \nedges{ \nnode{ \ncountrycode \nlanguage \nisofficial \npercentage\n}\n}\n}\n}\n`;\n    const GET_CITIES = `\nquery getCities {\ncities(filters: {countrycode: \"${country.code}\"}) {\nedges {\nnode {\nid \nname \ncountrycode \ndistrict \npopulation \n}\n}\n}\n}\n\n`;\n    fetch('/graphql?query=' + GET_LANGUAGES).then(res => res.json()).then(data => {\n      setLanguages(data.data.countryLanguages.edges);\n    });\n    fetch('/graphql?query=' + GET_CITIES).then(res => res.json()).then(data => {\n      setCities(data.data.cities.edges);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"World Database\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Continents, {\n    onClick: onContinentClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Regions, {\n    regions: regions,\n    onClick: onRegionClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Countries, {\n    countries: countries,\n    onClick: onCountryClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, continent, \" \", sep1, \" \", region, \" \", sep2, \" \", country.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CountryAttr, {\n    country: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Language, {\n    languages: languages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Cities, {\n    cities: cities,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Julia Park/source/repos/world/react-app/src/App.js"],"names":["React","useState","Continents","Regions","Countries","CountryAttr","Language","Cities","App","continent","setContinent","regions","setRegions","region","setRegion","countries","setCountries","country","setCountry","languages","setLanguages","cities","setCities","sep1","setSep1","sep2","setSep2","onContinentClick","cont","fetch","then","res","json","data","onRegionClick","reg","GET_COUNTRIES","edges","onCountryClick","GET_LANGUAGES","code","GET_CITIES","countryLanguages","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport { Continents } from './components/Continents';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Regions } from './components/Regions';\r\nimport { Countries } from './components/Countries';\r\nimport { CountryAttr } from './components/CountryAttr';\r\nimport { Language } from './components/Language';\r\nimport { Cities } from './components/Cities';\r\n\r\nfunction App() {\r\n    const [continent, setContinent] = useState([]);\r\n    const [regions, setRegions] = useState([]);\r\n    const [region, setRegion] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [country, setCountry] = useState([]);\r\n    const [languages, setLanguages] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    const [sep1, setSep1] = useState(\"\");\r\n    const [sep2, setSep2] = useState(\"\");\r\n\r\n    \r\n\r\n    function onContinentClick(cont) {\r\n        setRegions([]);\r\n        setCountries([]);\r\n        setLanguages([]);\r\n        setCities([]);\r\n        setRegion([]);\r\n        setCountry([]);\r\n        setSep2(\"\");\r\n\r\n        setContinent(cont);\r\n\r\n        fetch('/regions/' + cont).then(res => res.json())\r\n            .then(data => {\r\n                setRegions(data.regions);\r\n            })\r\n        setSep1(\">\");\r\n    }\r\n\r\n    function onRegionClick(reg) {\r\n        setCountries([]);\r\n        setLanguages([]);\r\n        setCities([]);\r\n        setRegion([]);\r\n        setCountry([]);\r\n\r\n        setRegion(reg);\r\n\r\n        const GET_COUNTRIES = `\r\nquery getCountries {\r\ncountries(filters: {continent: \"${continent}\", region: \"${reg}\"}) {\r\nedges {\r\nnode {\r\ncode \r\nname \r\ncontinent \r\nregion \r\nsurfacearea \r\nindepyear \r\npopulation \r\nlifeexpectancy \r\ngnp \r\ngnpold \r\nlocalname \r\ngovernmentform \r\nheadofstate \r\ncapital \r\ncode2\r\n}\r\n}\r\n}\r\n}\r\n`;\r\n\r\n        fetch('/graphql?query=' + GET_COUNTRIES).then(res => res.json())\r\n            .then(data => {\r\n                setCountries(data.data.countries.edges);\r\n            });\r\n\r\n        setSep2(\">\");\r\n    }\r\n\r\n    function onCountryClick(country) {\r\n        setCountry(country);\r\n\r\n        const GET_LANGUAGES = `\r\nquery getLangauages { \r\ncountryLanguages(filters: {countrycode: \"${country.code}\"}) { \r\nedges{ \r\nnode{ \r\ncountrycode \r\nlanguage \r\nisofficial \r\npercentage\r\n}\r\n}\r\n}\r\n}\r\n`;\r\n\r\n        const GET_CITIES = `\r\nquery getCities {\r\ncities(filters: {countrycode: \"${country.code}\"}) {\r\nedges {\r\nnode {\r\nid \r\nname \r\ncountrycode \r\ndistrict \r\npopulation \r\n}\r\n}\r\n}\r\n}\r\n\r\n`;\r\n\r\n        fetch('/graphql?query=' + GET_LANGUAGES).then(res => res.json())\r\n            .then(data => {\r\n                setLanguages(data.data.countryLanguages.edges);\r\n            });\r\n\r\n        fetch('/graphql?query=' + GET_CITIES).then(res => res.json())\r\n            .then(data => {\r\n                setCities(data.data.cities.edges);\r\n            });\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"App App-header\">\r\n            <h1>World Database</h1>\r\n            <div className=\"App-filters\">\r\n                <Continents onClick={onContinentClick} />\r\n                <Regions regions={regions} onClick={onRegionClick} />\r\n                <Countries countries={countries} onClick={onCountryClick} />\r\n            </div>\r\n            <p>{continent} {sep1} {region} {sep2} {country.name}</p>\r\n            <div className=\"App-data\">\r\n                <CountryAttr country={country} />\r\n                <Language languages={languages} />\r\n                <Cities cities={cities} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}