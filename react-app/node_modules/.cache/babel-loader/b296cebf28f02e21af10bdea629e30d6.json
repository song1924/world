{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia Park\\\\source\\\\repos\\\\world\\\\react-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Continents } from './components/Continents';\nimport { Countries } from './components/Countries';\n\nfunction App() {\n  const [continents, setContinents] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [cities, setCities] = useState([]);\n  const GET_COUNTRIES = `\nquery getCountries {\ncountries(filters: {continent: \"North America\", region: \"North America\"}) {\nedges {\nnode {\ncode \nname \ncontinent \nregion \nsurfacearea \nindepyear \npopulation \nlifeexpectancy \ngnp \ngnpold \nlocalname \ngovernmentform \nheadofstate \ncapital \ncode2\n}\n}\n}\n}\n`;\n  const GET_CITIES = `\nquery getCities {\ncities(filters: {countrycode: \"USA\"}) {\nedges {\nnode {\nid \nname \ncountrycode \ndistrict \npopulation \n}\n}\n}\n}\n\n`;\n  useEffect(() => {\n    fetch('/continents').then(res => res.json()).then(data => {\n      setContinents(data.continents);\n    });\n    fetch('/graphql?query=' + GET_COUNTRIES).then(res => res.json()).then(data => {\n      setCountries(data.countries);\n    });\n    fetch('/graphql?query=' + GET_CITIES).then(res => res.json()).then(data => {\n      setCities(data.cities);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"World Database\"), /*#__PURE__*/React.createElement(Continents, {\n    continents: continents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Julia Park/source/repos/world/react-app/src/App.js"],"names":["React","useState","useEffect","Continents","Countries","App","continents","setContinents","countries","setCountries","cities","setCities","GET_COUNTRIES","GET_CITIES","fetch","then","res","json","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAEA,SAASC,GAAT,GAAe;AACX,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMW,aAAa,GAAI;;;;;;;;;;;;;;;;;;;;;;;;CAAvB;AA0BA,QAAMC,UAAU,GAAI;;;;;;;;;;;;;;;CAApB;AAiBAX,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,KAAK,CAAC,aAAD,CAAL,CAAqBC,IAArB,CAA0BC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAjC,EAA6CF,IAA7C,CAAkDG,IAAI,IAAI;AACtDX,MAAAA,aAAa,CAACW,IAAI,CAACZ,UAAN,CAAb;AACH,KAFD;AAIAQ,IAAAA,KAAK,CAAC,oBAAoBF,aAArB,CAAL,CAAyCG,IAAzC,CAA8CC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAArD,EACKF,IADL,CACUG,IAAI,IAAI;AACVT,MAAAA,YAAY,CAACS,IAAI,CAACV,SAAN,CAAZ;AACP,KAHD;AAKAM,IAAAA,KAAK,CAAC,oBAAoBD,UAArB,CAAL,CAAsCE,IAAtC,CAA2CC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAlD,EACKF,IADL,CACUG,IAAI,IAAI;AACVP,MAAAA,SAAS,CAACO,IAAI,CAACR,MAAN,CAAT;AACH,KAHL;AAIH,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEJ,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Continents } from './components/Continents';\r\nimport { Countries } from './components/Countries';\r\n\r\nfunction App() {\r\n    const [continents, setContinents] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    const GET_COUNTRIES = `\r\nquery getCountries {\r\ncountries(filters: {continent: \"North America\", region: \"North America\"}) {\r\nedges {\r\nnode {\r\ncode \r\nname \r\ncontinent \r\nregion \r\nsurfacearea \r\nindepyear \r\npopulation \r\nlifeexpectancy \r\ngnp \r\ngnpold \r\nlocalname \r\ngovernmentform \r\nheadofstate \r\ncapital \r\ncode2\r\n}\r\n}\r\n}\r\n}\r\n`;\r\n\r\n    const GET_CITIES = `\r\nquery getCities {\r\ncities(filters: {countrycode: \"USA\"}) {\r\nedges {\r\nnode {\r\nid \r\nname \r\ncountrycode \r\ndistrict \r\npopulation \r\n}\r\n}\r\n}\r\n}\r\n\r\n`;\r\n\r\n    useEffect(() => {\r\n        fetch('/continents').then(res => res.json()).then(data => {\r\n            setContinents(data.continents);\r\n        });\r\n\r\n        fetch('/graphql?query=' + GET_COUNTRIES).then(res => res.json())\r\n            .then(data => {\r\n                setCountries(data.countries);\r\n        });\r\n\r\n        fetch('/graphql?query=' + GET_CITIES).then(res => res.json())\r\n            .then(data => {\r\n                setCities(data.cities);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App App-header\">\r\n            <h1>World Database</h1>\r\n            <Continents continents={continents} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}