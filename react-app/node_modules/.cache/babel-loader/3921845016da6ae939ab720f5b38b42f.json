{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia Park\\\\source\\\\repos\\\\world\\\\react-app\\\\src\\\\components\\\\Language.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nexport const Language = ({\n  country\n}) => {\n  const [languages, setLanguages] = useState([]);\n\n  if (!country || country.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 16\n      }\n    });\n  }\n\n  const GET_LANGUAGES = `\nquery getLangauages { \ncountryLanguages(filters: {countrycode: \"${country.code}\"}) { \nedges{ \nnode{ \ncountrycode \nlanguage \nisofficial \npercentage\n}\n}\n}\n}\n`;\n  useEffect(() => {\n    fetch('/graphql?query=' + GET_LANGUAGES).then(res => res.json()).then(data => {\n      setLanguages(data.data.countryLanguages.edges);\n    });\n  }, []);\n  let lan_ls = [];\n\n  for (const lan of languages) {\n    lan_ls.push(lan.node);\n  }\n\n  const columns = [{\n    dataField: 'language',\n    text: 'Language Name',\n    sort: true\n  }, {\n    dataField: 'isofficial',\n    text: 'Official',\n    sort: true\n  }, {\n    dataField: 'percentage',\n    text: 'Percentage',\n    sort: true\n  }];\n  const defaultSorted = [{\n    dataField: 'percentage',\n    order: 'desc'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-data-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Languages in Use\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BootstrapTable, {\n    wrapperClasses: \"table-responsive\",\n    keyField: \"language\",\n    data: lan_ls,\n    columns: columns,\n    defaultSorted: defaultSorted,\n    striped: true,\n    hover: true,\n    condensed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["C:/Users/Julia Park/source/repos/world/react-app/src/components/Language.jsx"],"names":["React","useState","useEffect","BootstrapTable","Language","country","languages","setLanguages","length","GET_LANGUAGES","code","fetch","then","res","json","data","countryLanguages","edges","lan_ls","lan","push","node","columns","dataField","text","sort","defaultSorted","order"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;;AAEA,MAAI,CAACI,OAAD,IAAYA,OAAO,CAACG,MAAR,KAAmB,CAAnC,EAAsC;AAClC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,QAAMC,aAAa,GAAI;;2CAEgBJ,OAAO,CAACK,IAAK;;;;;;;;;;;CAFpD;AAcAR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAAC,oBAAoBF,aAArB,CAAL,CAAyCG,IAAzC,CAA8CC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAArD,EACKF,IADL,CACUG,IAAI,IAAI;AACVR,MAAAA,YAAY,CAACQ,IAAI,CAACA,IAAL,CAAUC,gBAAV,CAA2BC,KAA5B,CAAZ;AACH,KAHL;AAIH,GALQ,EAKN,EALM,CAAT;AAQA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,MAAMC,GAAX,IAAkBb,SAAlB,EAA6B;AACzBY,IAAAA,MAAM,CAACE,IAAP,CAAYD,GAAG,CAACE,IAAhB;AACH;;AAED,QAAMC,OAAO,GAAG,CAAC;AACbC,IAAAA,SAAS,EAAE,UADE;AAEbC,IAAAA,IAAI,EAAE,eAFO;AAGbC,IAAAA,IAAI,EAAE;AAHO,GAAD,EAIb;AACCF,IAAAA,SAAS,EAAE,YADZ;AAECC,IAAAA,IAAI,EAAE,UAFP;AAGCC,IAAAA,IAAI,EAAE;AAHP,GAJa,EAQb;AACCF,IAAAA,SAAS,EAAE,YADZ;AAECC,IAAAA,IAAI,EAAE,YAFP;AAGCC,IAAAA,IAAI,EAAE;AAHP,GARa,CAAhB;AAcA,QAAMC,aAAa,GAAG,CAAC;AACnBH,IAAAA,SAAS,EAAE,YADQ;AAEnBI,IAAAA,KAAK,EAAE;AAFY,GAAD,CAAtB;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,cAAc,EAAC,kBAA/B;AAAkD,IAAA,QAAQ,EAAC,UAA3D;AAAsE,IAAA,IAAI,EAAET,MAA5E;AAAoF,IAAA,OAAO,EAAEI,OAA7F;AAAsG,IAAA,aAAa,EAAEI,aAArH;AAAoI,IAAA,OAAO,MAA3I;AAA4I,IAAA,KAAK,MAAjJ;AAAkJ,IAAA,SAAS,MAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ;AAQH,CA7DM","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\nexport const Language = ({ country }) => {\r\n    const [languages, setLanguages] = useState([]);\r\n\r\n    if (!country || country.length === 0) {\r\n        return <div></div>\r\n    }\r\n\r\n    const GET_LANGUAGES = `\r\nquery getLangauages { \r\ncountryLanguages(filters: {countrycode: \"${country.code}\"}) { \r\nedges{ \r\nnode{ \r\ncountrycode \r\nlanguage \r\nisofficial \r\npercentage\r\n}\r\n}\r\n}\r\n}\r\n`;\r\n    useEffect(() => {\r\n        fetch('/graphql?query=' + GET_LANGUAGES).then(res => res.json())\r\n            .then(data => {\r\n                setLanguages(data.data.countryLanguages.edges);\r\n            });\r\n    }, []);\r\n    \r\n\r\n    let lan_ls = [];\r\n    for (const lan of languages) {\r\n        lan_ls.push(lan.node);\r\n    }\r\n\r\n    const columns = [{\r\n        dataField: 'language',\r\n        text: 'Language Name',\r\n        sort: true\r\n    }, {\r\n        dataField: 'isofficial',\r\n        text: 'Official',\r\n        sort: true\r\n    }, {\r\n        dataField: 'percentage',\r\n        text: 'Percentage',\r\n        sort: true\r\n        }];\r\n\r\n    const defaultSorted = [{\r\n        dataField: 'percentage',\r\n        order: 'desc'\r\n    }];\r\n\r\n    return (\r\n        <div className=\"App-data-wrap\">\r\n            <p>Languages in Use</p>\r\n            <div className=\"App-table\">\r\n                <BootstrapTable wrapperClasses=\"table-responsive\" keyField=\"language\" data={lan_ls} columns={columns} defaultSorted={defaultSorted} striped hover condensed/>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}