{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia Park\\\\source\\\\repos\\\\world\\\\react-app\\\\src\\\\components\\\\Regions.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nexport const Regions = ({\n  continent,\n  onClick\n}) => {\n  const [regions, setRegions] = useState([]);\n\n  if (continent && continent.length > 0) {\n    useEffect(() => {\n      fetch('/regions/' + continent).then(res => res.json()).then(data => {\n        setRegions(data.regions);\n      });\n    }, []);\n  }\n\n  return /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"App-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"success\",\n    id: \"region-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Region\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, regions.map(reg => /*#__PURE__*/React.createElement(Dropdown.Item, {\n    key: reg,\n    onClick: () => onClick(reg),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, reg))));\n};","map":{"version":3,"sources":["C:/Users/Julia Park/source/repos/world/react-app/src/components/Regions.jsx"],"names":["React","useState","useEffect","Dropdown","Regions","continent","onClick","regions","setRegions","length","fetch","then","res","json","data","map","reg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAGA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA4B;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,MAAII,SAAS,IAAIA,SAAS,CAACI,MAAV,GAAmB,CAApC,EAAuC;AACnCP,IAAAA,SAAS,CAAC,MAAM;AACZQ,MAAAA,KAAK,CAAC,cAAcL,SAAf,CAAL,CAA+BM,IAA/B,CAAoCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA3C,EACKF,IADL,CACUG,IAAI,IAAI;AACVN,QAAAA,UAAU,CAACM,IAAI,CAACP,OAAN,CAAV;AACH,OAHL;AAIH,KALQ,EAKN,EALM,CAAT;AAOH;;AAED,sBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,OAAO,EAAC,SAAzB;AAAmC,IAAA,EAAE,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OAAO,CAACQ,GAAR,CAAYC,GAAG,iBACZ,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,GAAG,EAAEA,GAApB;AAAyB,IAAA,OAAO,EAAE,MAAMV,OAAO,CAACU,GAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,GADL,CADH,CADL,CAJJ,CADJ;AAcH,CA3BM","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\n\r\nexport const Regions = ({ continent, onClick }) => {\r\n    const [regions, setRegions] = useState([]);\r\n\r\n    if (continent && continent.length > 0) {\r\n        useEffect(() => {\r\n            fetch('/regions/' + continent).then(res => res.json())\r\n                .then(data => {\r\n                    setRegions(data.regions);\r\n                });\r\n        }, []);\r\n        \r\n    }\r\n\r\n    return (\r\n        <Dropdown className=\"App-filter\">\r\n            <Dropdown.Toggle variant=\"success\" id=\"region-dropdown\">\r\n                Region\r\n                </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n                {regions.map(reg =>\r\n                    <Dropdown.Item key={reg} onClick={() => onClick(reg)}>\r\n                        {reg}\r\n                    </Dropdown.Item>\r\n                )}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}