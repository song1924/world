{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia Park\\\\source\\\\repos\\\\world\\\\react-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Continents } from './components/Continents';\nimport { Regions } from './components/Regions';\nimport { Countries } from './components/Countries';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  const [continents, setContinents] = useState([]);\n  const [continent, setContinent] = useState([]);\n  const [regions, setRegions] = useState([]);\n  const [region, setRegion] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [city, setCity] = useState([]);\n  const GET_COUNTRIES = `\nquery getCountries {\ncountries(filters: {continent: ${continent}, region: ${region}}) {\nedges {\nnode {\ncode \nname \ncontinent \nregion \nsurfacearea \nindepyear \npopulation \nlifeexpectancy \ngnp \ngnpold \nlocalname \ngovernmentform \nheadofstate \ncapital \ncode2\n}\n}\n}\n}\n`;\n  const GET_CITIES = `\nquery getCities {\ncities(filters: {countrycode: \"USA\"}) {\nedges {\nnode {\nid \nname \ncountrycode \ndistrict \npopulation \n}\n}\n}\n}\n\n`;\n  let cont_reg = {};\n  useEffect(() => {\n    fetch('/continents').then(res => res.json()).then(data => {\n      setContinents(data.continents);\n    });\n\n    for (const cont of continents) {\n      fetch('/regions/' + continent).then(res => res.json()).then(data => {\n        cont_reg.cont = data.regions;\n        console.log(cont_reg);\n      });\n    } //fetch('/graphql?query=' + GET_CITIES).then(res => res.json())\n    //    .then(data => {\n    //        setCities(data.cities);\n    //    });\n\n  }, []);\n\n  function onRegionClick(cont, reg) {\n    setContinent(cont);\n    setRegion(reg);\n    fetch('/graphql?query=' + GET_COUNTRIES).then(res => res.json()).then(data => {\n      setCountries(data.countries);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"World Database\"), /*#__PURE__*/React.createElement(Continents, {\n    cont_reg: cont_reg,\n    onClick: onRegionClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Julia Park/source/repos/world/react-app/src/App.js"],"names":["React","useState","useEffect","Continents","Regions","Countries","App","continents","setContinents","continent","setContinent","regions","setRegions","region","setRegion","countries","setCountries","country","setCountry","cities","setCities","city","setCity","GET_COUNTRIES","GET_CITIES","cont_reg","fetch","then","res","json","data","cont","console","log","onRegionClick","reg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAO,kCAAP;;AAGA,SAASC,GAAT,GAAe;AACX,QAAM,CAACC,UAAD,EAAaC,aAAb,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMsB,aAAa,GAAI;;iCAEMd,SAAU,aAAYI,MAAO;;;;;;;;;;;;;;;;;;;;;;CAF1D;AA0BA,QAAMW,UAAU,GAAI;;;;;;;;;;;;;;;CAApB;AAgBA,MAAIC,QAAQ,GAAG,EAAf;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACZwB,IAAAA,KAAK,CAAC,aAAD,CAAL,CAAqBC,IAArB,CAA0BC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAjC,EAA6CF,IAA7C,CAAkDG,IAAI,IAAI;AACtDtB,MAAAA,aAAa,CAACsB,IAAI,CAACvB,UAAN,CAAb;AACH,KAFD;;AAIA,SAAK,MAAMwB,IAAX,IAAmBxB,UAAnB,EAA+B;AAC3BmB,MAAAA,KAAK,CAAC,cAAcjB,SAAf,CAAL,CAA+BkB,IAA/B,CAAoCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA3C,EAAuDF,IAAvD,CAA4DG,IAAI,IAAI;AAChEL,QAAAA,QAAQ,CAACM,IAAT,GAAgBD,IAAI,CAACnB,OAArB;AACAqB,QAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACH,OAHD;AAIH,KAVW,CAcZ;AACA;AACA;AACA;;AACH,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,WAASS,aAAT,CAAuBH,IAAvB,EAA6BI,GAA7B,EAAkC;AAC9BzB,IAAAA,YAAY,CAACqB,IAAD,CAAZ;AACAjB,IAAAA,SAAS,CAACqB,GAAD,CAAT;AAEAT,IAAAA,KAAK,CAAC,oBAAoBH,aAArB,CAAL,CAAyCI,IAAzC,CAA8CC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAArD,EACKF,IADL,CACUG,IAAI,IAAI;AACVd,MAAAA,YAAY,CAACc,IAAI,CAACf,SAAN,CAAZ;AACP,KAHD;AAIH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEU,QAAtB;AAAgC,IAAA,OAAO,EAAES,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;AAED,eAAe5B,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Continents } from './components/Continents';\r\nimport { Regions } from './components/Regions';\r\nimport { Countries } from './components/Countries';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nfunction App() {\r\n    const [continents, setContinents, ] = useState([]);\r\n    const [continent, setContinent] = useState([]);\r\n    const [regions, setRegions] = useState([]);\r\n    const [region, setRegion] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [country, setCountry] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    const [city, setCity] = useState([]);\r\n\r\n    const GET_COUNTRIES = `\r\nquery getCountries {\r\ncountries(filters: {continent: ${continent}, region: ${region}}) {\r\nedges {\r\nnode {\r\ncode \r\nname \r\ncontinent \r\nregion \r\nsurfacearea \r\nindepyear \r\npopulation \r\nlifeexpectancy \r\ngnp \r\ngnpold \r\nlocalname \r\ngovernmentform \r\nheadofstate \r\ncapital \r\ncode2\r\n}\r\n}\r\n}\r\n}\r\n`;\r\n\r\n    const GET_CITIES = `\r\nquery getCities {\r\ncities(filters: {countrycode: \"USA\"}) {\r\nedges {\r\nnode {\r\nid \r\nname \r\ncountrycode \r\ndistrict \r\npopulation \r\n}\r\n}\r\n}\r\n}\r\n\r\n`;\r\n    let cont_reg = {};\r\n\r\n    useEffect(() => {\r\n        fetch('/continents').then(res => res.json()).then(data => {\r\n            setContinents(data.continents);\r\n        });\r\n\r\n        for (const cont of continents) {\r\n            fetch('/regions/' + continent).then(res => res.json()).then(data => {\r\n                cont_reg.cont = data.regions;\r\n                console.log(cont_reg);\r\n            });\r\n        }\r\n        \r\n\r\n        \r\n        //fetch('/graphql?query=' + GET_CITIES).then(res => res.json())\r\n        //    .then(data => {\r\n        //        setCities(data.cities);\r\n        //    });\r\n    }, []);\r\n\r\n    function onRegionClick(cont, reg) {\r\n        setContinent(cont);\r\n        setRegion(reg);\r\n\r\n        fetch('/graphql?query=' + GET_COUNTRIES).then(res => res.json())\r\n            .then(data => {\r\n                setCountries(data.countries);\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App App-header\">\r\n            <h1>World Database</h1>\r\n            <Continents cont_reg={cont_reg} onClick={onRegionClick} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}