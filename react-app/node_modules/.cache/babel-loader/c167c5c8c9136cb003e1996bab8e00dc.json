{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia Park\\\\source\\\\repos\\\\world\\\\react-app\\\\src\\\\components\\\\AddCityForm.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { From, Button, Form, Col } from 'react-bootstrap';\nexport const AddCityForm = ({\n  show,\n  country\n}) => {\n  const [validated, setValidated] = useState(false);\n  const [responseMessage, setResponseMessage] = useState(\"\");\n  const formRef = useRef(null);\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    const ADD_CITY = `\nmutation addCity {\ncreateCity(name: \"${event.target.formName.value}\", countrycode: \"${country}\", ditrict: \"${event.target.formDistrict.value}\", population: ${event.target.formPopulation.value}) {\ncity {\nid \nname \ncountrycode \ndistrict \npopulation\n}\n}\n}\n\n`;\n    fetch('/graphql?query' + ADD_CITY).then(response => response.json()).then(data => {\n      console.log(data);\n\n      if (data) {\n        setResponseMessage(data.name + \" is successfully added.\");\n      } else {\n        setResponseMessage(\"System failed to add city.\");\n      }\n    });\n    console.log(formRef);\n    formRef.current.reset();\n    setValidated(false);\n  };\n\n  if (show) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      inline: true,\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      style: {\n        width: \"100%\"\n      },\n      ref: formRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      className: \"align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"mb-4\",\n      type: \"text\",\n      placeholder: \"City Name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formDistrict\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"mb-4\",\n      type: \"text\",\n      placeholder: \"District\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formPopulation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"mb-4\",\n      type: \"number\",\n      placeholder: \"Population\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"mb-4\",\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, responseMessage));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Julia Park/source/repos/world/react-app/src/components/AddCityForm.jsx"],"names":["React","useState","useEffect","useRef","From","Button","Form","Col","AddCityForm","show","country","validated","setValidated","responseMessage","setResponseMessage","formRef","handleSubmit","event","form","currentTarget","preventDefault","checkValidity","stopPropagation","ADD_CITY","target","formName","value","formDistrict","formPopulation","fetch","then","response","json","data","console","log","name","current","reset","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { From, Button, Form, Col } from 'react-bootstrap';\r\n\r\nexport const AddCityForm = ({ show, country }) => {\r\n    const [validated, setValidated] = useState(false);\r\n    const [responseMessage, setResponseMessage] = useState(\"\");\r\n    const formRef = useRef(null);\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n\r\n        if (form.checkValidity() === false) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        setValidated(true);\r\n\r\n        const ADD_CITY = `\r\nmutation addCity {\r\ncreateCity(name: \"${event.target.formName.value}\", countrycode: \"${country}\", ditrict: \"${event.target.formDistrict.value}\", population: ${event.target.formPopulation.value}) {\r\ncity {\r\nid \r\nname \r\ncountrycode \r\ndistrict \r\npopulation\r\n}\r\n}\r\n}\r\n\r\n`;\r\n\r\n        fetch('/graphql?query' + ADD_CITY)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                if (data) {\r\n                    setResponseMessage(data.name + \" is successfully added.\");\r\n                } else {\r\n                    setResponseMessage(\"System failed to add city.\");\r\n                }\r\n            });\r\n        console.log(formRef);\r\n        formRef.current.reset();\r\n        setValidated(false);\r\n    };\r\n\r\n    if (show) {\r\n        return (\r\n            <div>\r\n                <Form inline noValidate validated={validated} onSubmit={handleSubmit} style={{ width: \"100%\" }} ref={ formRef }>\r\n                <Form.Row className=\"align-items-center\">\r\n                    <Col xs=\"auto\">\r\n                        <Form.Group controlId=\"formName\">\r\n                            <Form.Control className=\"mb-4\" type=\"text\" placeholder=\"City Name\" required />\r\n                            </Form.Group>\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                        <Form.Group controlId=\"formDistrict\">\r\n                            <Form.Control className=\"mb-4\" type=\"text\" placeholder=\"District\" required />\r\n                            </Form.Group>\r\n                    </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Group controlId=\"formPopulation\">\r\n                            <Form.Control className=\"mb-4\" type=\"number\" placeholder=\"Population\" required />\r\n                            </Form.Group>\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                        <Button className=\"mb-4\" variant=\"success\" type=\"submit\">\r\n                            Submit\r\n                    </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n                </Form>\r\n                <p>{responseMessage}</p>\r\n                </div>\r\n        )\r\n    }\r\n\r\n    return <div></div>\r\n}"]},"metadata":{},"sourceType":"module"}