{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia Park\\\\source\\\\repos\\\\world\\\\react-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect, ReactDOM } from 'react';\nimport './App.css';\nimport { Continents } from './components/Continents';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Regions } from './components/Regions';\n\nfunction App() {\n  const [continents, setContinents] = useState([]);\n  const [continent, setContinent] = useState([]);\n  const [regions, setRegions] = useState([]);\n  const [region, setRegion] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [city, setCity] = useState([]);\n  const [activeEventKey, setActiveEventKey] = useState(\"\");\n  const GET_CITIES = `\nquery getCities {\ncities(filters: {countrycode: \"USA\"}) {\nedges {\nnode {\nid \nname \ncountrycode \ndistrict \npopulation \n}\n}\n}\n}\n\n`;\n  useEffect(() => {\n    fetch('/continents').then(res => res.json()).then(data => {\n      setContinents(data.continents);\n    }); //fetch('/graphql?query=' + GET_CITIES).then(res => res.json())\n    //    .then(data => {\n    //        setCities(data.cities);\n    //    });\n  }, []);\n  let sep1,\n      sep2 = \"\";\n\n  function onContinentClick(cont) {\n    setContinent(cont);\n    fetch('/regions/' + cont).then(res => res.json()).then(data => {\n      setRegions(data.regions);\n    });\n    sep1 = \">\";\n  }\n\n  function onRegionClick(reg) {\n    setRegion(reg);\n    const GET_COUNTRIES = `\nquery getCountries {\ncountries(filters: {continent: ${continent}, region: ${reg}}) {\nedges {\nnode {\ncode \nname \ncontinent \nregion \nsurfacearea \nindepyear \npopulation \nlifeexpectancy \ngnp \ngnpold \nlocalname \ngovernmentform \nheadofstate \ncapital \ncode2\n}\n}\n}\n}\n`;\n    fetch('/graphql?query=' + GET_COUNTRIES).then(res => res.json()).then(data => {\n      setCountries(data.countries);\n    });\n    sep2 = \">\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"World Database\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Continents, {\n    continents: continents,\n    onClick: onContinentClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Regions, {\n    regions: regions,\n    onClick: onRegionClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"App-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, continent, \" \", sep1, \" \", region, \" \", sep2, \" \", country));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Julia Park/source/repos/world/react-app/src/App.js"],"names":["React","useState","useEffect","ReactDOM","Continents","Regions","App","continents","setContinents","continent","setContinent","regions","setRegions","region","setRegion","countries","setCountries","country","setCountry","cities","setCities","city","setCity","activeEventKey","setActiveEventKey","GET_CITIES","fetch","then","res","json","data","sep1","sep2","onContinentClick","cont","onRegionClick","reg","GET_COUNTRIES"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, ReactDOM } from 'react';\r\nimport './App.css';\r\nimport { Continents } from './components/Continents';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Regions } from './components/Regions';\r\n\r\nfunction App() {\r\n    const [continents, setContinents, ] = useState([]);\r\n    const [continent, setContinent] = useState([]);\r\n    const [regions, setRegions] = useState([]);\r\n    const [region, setRegion] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [country, setCountry] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    const [city, setCity] = useState([]);\r\n    const [activeEventKey, setActiveEventKey] = useState(\"\");\r\n\r\n    const GET_CITIES = `\r\nquery getCities {\r\ncities(filters: {countrycode: \"USA\"}) {\r\nedges {\r\nnode {\r\nid \r\nname \r\ncountrycode \r\ndistrict \r\npopulation \r\n}\r\n}\r\n}\r\n}\r\n\r\n`;\r\n    useEffect(() => {\r\n        fetch('/continents').then(res => res.json()).then(data => {\r\n            setContinents(data.continents);\r\n        });\r\n\r\n       \r\n\r\n        \r\n        //fetch('/graphql?query=' + GET_CITIES).then(res => res.json())\r\n        //    .then(data => {\r\n        //        setCities(data.cities);\r\n        //    });\r\n    }, []);\r\n\r\n    let sep1, sep2 = \"\";\r\n\r\n    function onContinentClick(cont) {\r\n        setContinent(cont);\r\n\r\n        fetch('/regions/' + cont).then(res => res.json())\r\n            .then(data => {\r\n                setRegions(data.regions);\r\n            })\r\n        \r\n        sep1 = \">\";\r\n    }\r\n\r\n    function onRegionClick(reg) {\r\n        setRegion(reg);\r\n\r\n        const GET_COUNTRIES = `\r\nquery getCountries {\r\ncountries(filters: {continent: ${continent}, region: ${reg}}) {\r\nedges {\r\nnode {\r\ncode \r\nname \r\ncontinent \r\nregion \r\nsurfacearea \r\nindepyear \r\npopulation \r\nlifeexpectancy \r\ngnp \r\ngnpold \r\nlocalname \r\ngovernmentform \r\nheadofstate \r\ncapital \r\ncode2\r\n}\r\n}\r\n}\r\n}\r\n`;\r\n\r\n        fetch('/graphql?query=' + GET_COUNTRIES).then(res => res.json())\r\n            .then(data => {\r\n                setCountries(data.countries);\r\n            });\r\n\r\n        sep2 = \">\";\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"App App-header\">\r\n            <h1>World Database</h1>\r\n            <div className=\"App-filters\">\r\n                <Continents continents={continents} onClick={onContinentClick} />\r\n                <Regions regions={regions} onClick={onRegionClick} />\r\n                </div>\r\n            <p className=\"App-data\">{continent} {sep1} {region} {sep2} {country}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}