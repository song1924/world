{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia Park\\\\source\\\\repos\\\\world\\\\react-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Continents } from './components/Continents';\nimport { Regions } from './components/Regions';\nimport { Countries } from './components/Countries';\n\nfunction App() {\n  const [continents, setContinents] = useState([]);\n  const [regions, setRegions] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [cities, setCities] = useState([]);\n  const GET_COUNTRIES = `\nquery getCountries {\ncountries(filters: {continent: \"North America\", region: \"North America\"}) {\nedges {\nnode {\ncode \nname \ncontinent \nregion \nsurfacearea \nindepyear \npopulation \nlifeexpectancy \ngnp \ngnpold \nlocalname \ngovernmentform \nheadofstate \ncapital \ncode2\n}\n}\n}\n}\n`;\n  useEffect(() => {\n    fetch('/continents').then(res => res.json()).then(data => {\n      setContinents(data.continents);\n    });\n    fetch('/regions/Asia').then(res => res.json()).then(data => {\n      setRegions(data.regions);\n    });\n    fetch('/graphql?query=' + GET_COUNTRIES).then(res => res.json()).then(data => {\n      console.log(data);\n    }); //fetch()\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Continents, {\n    continents: continents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Regions, {\n    regions: regions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Countries, {\n    countries: countries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Julia Park/source/repos/world/react-app/src/App.js"],"names":["React","useState","useEffect","Continents","Regions","Countries","App","continents","setContinents","regions","setRegions","countries","setCountries","cities","setCities","GET_COUNTRIES","fetch","then","res","json","data","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAEA,SAASC,GAAT,GAAe;AACX,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMc,aAAa,GAAI;;;;;;;;;;;;;;;;;;;;;;;;CAAvB;AA0BAb,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,KAAK,CAAC,aAAD,CAAL,CAAqBC,IAArB,CAA0BC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAjC,EAA6CF,IAA7C,CAAkDG,IAAI,IAAI;AACtDZ,MAAAA,aAAa,CAACY,IAAI,CAACb,UAAN,CAAb;AACH,KAFD;AAIAS,IAAAA,KAAK,CAAC,eAAD,CAAL,CAAuBC,IAAvB,CAA4BC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAnC,EAA+CF,IAA/C,CAAoDG,IAAI,IAAI;AACxDV,MAAAA,UAAU,CAACU,IAAI,CAACX,OAAN,CAAV;AACH,KAFD;AAIAO,IAAAA,KAAK,CAAC,oBAAoBD,aAArB,CAAL,CAAyCE,IAAzC,CAA8CC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAArD,EACKF,IADL,CACUG,IAAI,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAHD,EATY,CAcZ;AACH,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEb,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEE,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH;;AAED,eAAeL,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Continents } from './components/Continents';\r\nimport { Regions } from './components/Regions';\r\nimport { Countries } from './components/Countries';\r\n\r\nfunction App() {\r\n    const [continents, setContinents] = useState([]);\r\n    const [regions, setRegions] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    const GET_COUNTRIES = `\r\nquery getCountries {\r\ncountries(filters: {continent: \"North America\", region: \"North America\"}) {\r\nedges {\r\nnode {\r\ncode \r\nname \r\ncontinent \r\nregion \r\nsurfacearea \r\nindepyear \r\npopulation \r\nlifeexpectancy \r\ngnp \r\ngnpold \r\nlocalname \r\ngovernmentform \r\nheadofstate \r\ncapital \r\ncode2\r\n}\r\n}\r\n}\r\n}\r\n`;\r\n\r\n    useEffect(() => {\r\n        fetch('/continents').then(res => res.json()).then(data => {\r\n            setContinents(data.continents);\r\n        });\r\n\r\n        fetch('/regions/Asia').then(res => res.json()).then(data => {\r\n            setRegions(data.regions);\r\n        });\r\n\r\n        fetch('/graphql?query=' + GET_COUNTRIES).then(res => res.json())\r\n            .then(data => {\r\n            console.log(data);\r\n        });\r\n\r\n        //fetch()\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Continents continents={continents} />\r\n            <Regions regions={regions} />\r\n            <Countries countries={countries} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}